CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

project(local_date_time)

ADD_EXECUTABLE(unittests tests.cpp)

FIND_PACKAGE(Boost REQUIRED COMPONENTS unit_test_framework date_time system filesystem)

LINK_DIRECTORIES(${Boost_LIBRARY_DIRS})
TARGET_LINK_LIBRARIES(unittests ${Boost_LIBRARIES})
SET_PROPERTY(TARGET unittests PROPERTY COMPILE_DEFINITIONS BOOST_TEST_DYN_LINK COMPILE_TESTS USE_ZONEINFO)

IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE "Debug")
ENDIF()

IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
  IF(DEFINED ENV{TRAVIS})
    IF(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
      SET(CMAKE_CXX_FLAGS "-std=c++0x -Wall -O0 -fprofile-instr-generate -fcoverage-mapping -g")
    ELSE(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
      SET(CMAKE_CXX_FLAGS "-std=c++0x -Wall -O0 --coverage -g")
    ENDIF(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
  ELSE()
    IF(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
      SET(CMAKE_CXX_FLAGS "-std=c++0x -Wall -O0 -fprofile-instr-generate -fcoverage-mapping -g")
    ELSE(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
      SET(CMAKE_CXX_FLAGS "-std=c++0x -Wall --coverage -O0 -g")
    ENDIF(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
  ENDIF(DEFINED ENV{TRAVIS})
ENDIF(CMAKE_BUILD_TYPE STREQUAL "Debug")

IF(CMAKE_BUILD_TYPE STREQUAL "Release")
  SET(CMAKE_CXX_FLAGS "-std=c++0x -Wall -O3")
ENDIF(CMAKE_BUILD_TYPE STREQUAL "Release")


MESSAGE(STATUS "  Build Type: " "${CMAKE_BUILD_TYPE}")
MESSAGE(STATUS "  C++ flags: " "${CMAKE_CXX_FLAGS}")
